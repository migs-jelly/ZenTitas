//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using EntitasData.Domains.Game.Player;

public partial class PlayerEntity {

    public Acceleration acceleration { get { return (Acceleration)GetComponent(PlayerComponentsLookup.Acceleration); } }
    public bool hasAcceleration { get { return HasComponent(PlayerComponentsLookup.Acceleration); } }

    public void AddAcceleration(bool newIsAccelerated) {
        var index = PlayerComponentsLookup.Acceleration;
        var component = (Acceleration)CreateComponent(index, typeof(Acceleration));
        component.IsAccelerated = newIsAccelerated;
        AddComponent(index, component);
    }

    public void ReplaceAcceleration(bool newIsAccelerated) {
        var index = PlayerComponentsLookup.Acceleration;
        var component = (Acceleration)CreateComponent(index, typeof(Acceleration));
        component.IsAccelerated = newIsAccelerated;
        ReplaceComponent(index, component);
    }

    public void RemoveAcceleration() {
        RemoveComponent(PlayerComponentsLookup.Acceleration);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class PlayerMatcher {

    static Entitas.IMatcher<PlayerEntity> _matcherAcceleration;

    public static Entitas.IMatcher<PlayerEntity> Acceleration {
        get {
            if (_matcherAcceleration == null) {
                var matcher = (Entitas.Matcher<PlayerEntity>)Entitas.Matcher<PlayerEntity>.AllOf(PlayerComponentsLookup.Acceleration);
                matcher.componentNames = PlayerComponentsLookup.componentNames;
                _matcherAcceleration = matcher;
            }

            return _matcherAcceleration;
        }
    }
}
